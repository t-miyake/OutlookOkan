<Window x:Class="OutlookOkan.Views.ConfirmationWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:services="clr-namespace:OutlookOkan.Services"
             xmlns:types="clr-namespace:OutlookOkan.Types"
             xmlns:viewmodels="clr-namespace:OutlookOkan.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:ConfirmationWindowViewModel}"
             mc:Ignorable="d"
             Closing="ConfirmationWindow_OnClosing"
        Title="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Confirmation, Mode=OneWay}"
        ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterOwner" Height="{Binding WindowHeight}" Width="810">
    <StackPanel Margin="5,8">
        <StackPanel Margin="5,0,0,0">
            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.ConfirmationMessage1, Mode=OneWay}" FontSize="12" Padding="0" />
            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.ConfirmationMessage2, Mode=OneWay}" FontSize="11" Padding="0" Margin="0,3" />
        </StackPanel>
        <StackPanel Margin="8,7,8,8">
            <GroupBox Header="{Binding AlertCount}" FontSize="11" Padding="3,3,3,3">
                <DataGrid x:Name="AlertGrid" Height="64" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" BorderBrush="#FFD5DFE5" HeadersVisibility="None" ItemsSource="{Binding Alerts,Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeColumns="false" CanUserResizeRows="false" CanUserSortColumns="false" HorizontalGridLinesBrush="#FFD5DFE5" VerticalGridLinesBrush="#FFD5DFE5">
                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseUp" Handler="AlertGridMouseUpEvent_OnHandler" />
                        </Style>
                    </DataGrid.ItemContainerStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="types:Alert">
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="IsTabStop" Value="False" />
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding AlertMessage, Mode=OneWay}" Width="*" IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsImportant}" Value="True">
                                            <Setter Property="Foreground" Value="#FFFF2800" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsImportant}" Value="False">
                                            <Setter Property="Foreground" Value="Black" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                    </DataGrid.Resources>
                </DataGrid>
            </GroupBox>
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Margin="8,2,8,8">
                <GroupBox Header="{Binding AddressCount}" FontSize="11" Padding="3,3,3,3">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.To, Mode=OneWay}" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content=" (" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content="{Binding ToAddressCount}" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content=")" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                        </StackPanel>
                        <DataGrid Name="ToGrid" Height="{Binding ToGridHeight}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" BorderBrush="#FFD5DFE5" HeadersVisibility="None" ItemsSource="{Binding ToAddresses,Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeColumns="false" CanUserResizeRows="false" CanUserSortColumns="false" HorizontalGridLinesBrush="#FFD5DFE5" VerticalGridLinesBrush="#FFD5DFE5">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseUp" Handler="ToGridMouseUpEvent_OnHandler" />
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="types:Address">
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding MailAddress, Mode=OneWay}" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExternal}" Value="True" />
                                                        <Condition Binding="{Binding IsWhite}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="#FFFF2800" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExternal}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="Black" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsWhite}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="Black" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="ToolTip" Value="{Binding MailAddress, Mode=OneWay}" />
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            </DataGrid.Resources>
                        </DataGrid>
                        <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Cc, Mode=OneWay}" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content=" (" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content="{Binding CcAddressCount}" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content=")" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                        </StackPanel>
                        <DataGrid Name="CcGrid" Height="{Binding CcGridHeight}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" BorderBrush="#FFD5DFE5" HeadersVisibility="None" ItemsSource="{Binding CcAddresses,Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeColumns="false" CanUserResizeRows="false" CanUserSortColumns="false" HorizontalGridLinesBrush="#FFD5DFE5" VerticalGridLinesBrush="#FFD5DFE5">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseUp" Handler="CcGridMouseUpEvent_OnHandler" />
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="types:Address">
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding MailAddress, Mode=OneWay}" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExternal}" Value="True" />
                                                        <Condition Binding="{Binding IsWhite}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="#FFFF2800" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExternal}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="Black" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsWhite}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="Black" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="ToolTip" Value="{Binding MailAddress, Mode=OneWay}" />
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            </DataGrid.Resources>
                        </DataGrid>
                        <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Bcc, Mode=OneWay}" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content=" (" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content="{Binding BccAddressCount}" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                            <Label Content=")" Margin="0" Padding="0" VerticalAlignment="Bottom" FontSize="11" />
                        </StackPanel>
                        <DataGrid Name="BccGrid" Height="{Binding BccGridHeight}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" BorderBrush="#FFD5DFE5" HeadersVisibility="None" ItemsSource="{Binding BccAddresses,Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeColumns="false" CanUserResizeRows="false" CanUserSortColumns="false" HorizontalGridLinesBrush="#FFD5DFE5" VerticalGridLinesBrush="#FFD5DFE5">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseUp" Handler="BccGridMouseUpEvent_OnHandler" />
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="types:Address">
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding MailAddress, Mode=OneWay}" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExternal}" Value="True" />
                                                        <Condition Binding="{Binding IsWhite}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="#FFFF2800" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsExternal}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="Black" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsWhite}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="Black" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="ToolTip" Value="{Binding MailAddress, Mode=OneWay}" />
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            </DataGrid.Resources>
                        </DataGrid>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <GridSplitter Grid.Column="1" IsTabStop="False" />
            <StackPanel Grid.Column="2" Margin="0,2,8,0">
                <GroupBox Header="{Binding AttachmentCount}" FontSize="11" Padding="3,3,3,3">
                    <DataGrid Name="AttachmentGrid" Height="88" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" BorderBrush="#FFD5DFE5" HeadersVisibility="None" ItemsSource="{Binding Attachments,Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeColumns="false" CanUserResizeRows="false" CanUserSortColumns="false" HorizontalGridLinesBrush="#FFD5DFE5" VerticalGridLinesBrush="#FFD5DFE5">
                        <DataGrid.ItemContainerStyle>
                            <Style TargetType="DataGridRow">
                                <EventSetter Event="MouseUp" Handler="AttachmentGridMouseUpEvent_OnHandler" />
                            </Style>
                        </DataGrid.ItemContainerStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="types:Attachment">
                                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" IsEnabled="{Binding IsNotMustOpenBeforeCheck}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsTabStop" Value="False" />
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Open, Mode=OneWay}" Width="Auto" IsReadOnly="True" >
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCanOpen}" Value="True">
                                                <Setter Property="Foreground" Value="Blue" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCanOpen}" Value="False">
                                                <Setter Property="Foreground" Value="Gray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="IsTabStop" Value="False" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding FileName, Mode=OneWay}" Width="Auto" IsReadOnly="True" Foreground="Black" >
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsTabStop" Value="False" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding FileType, Mode=OneWay}" Width="Auto" IsReadOnly="True">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDangerous}" Value="True">
                                                <Setter Property="Foreground" Value="#FFFF2800" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsDangerous}" Value="False">
                                                <Setter Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="IsTabStop" Value="False" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding FileSize, Mode=OneWay}" Width="Auto" IsReadOnly="True">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTooBig}" Value="True">
                                                <Setter Property="Foreground" Value="#FFFF2800" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsTooBig}" Value="False">
                                                <Setter Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="IsTabStop" Value="False" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                        </DataGrid.Resources>
                    </DataGrid>
                </GroupBox>
                <GroupBox Header="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.MailInfo, Mode=OneWay}" FontSize="11" Padding="3,3,3,3" Margin="0,1.5,0,0">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Sender, Mode=OneWay}" FontSize="11" Padding="0" Width="42" />
                            <TextBox Width="304" Padding="0" Margin="5,0,0,0" IsReadOnly="True" Text="{Binding Sender, Mode=OneWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                            <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Subject, Mode=OneWay}" FontSize="11" Padding="0" Width="42" />
                            <TextBox Width="304" Padding="0" Margin="5,0,0,0" IsReadOnly="True" Text="{Binding Subject, Mode=OneWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.MailType, Mode=OneWay}" FontSize="11" Padding="0" Width="42" />
                                <TextBox Width="108" Padding="0" Margin="5,0,0,0" IsReadOnly="True" Text="{Binding MailType, Mode=OneWay}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.DeferredDeliveryMinutes, Mode=OneWay}" FontSize="11" Padding="0" Width="148" Margin="11,0,0,0" />
                                <TextBox x:Name="DeferredDeliveryMinutesBox" Width="32" Padding="0" Margin="5,0,0,0" IsReadOnly="false" TextAlignment="Right" Text="{Binding DeferredDeliveryMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="DeferredDeliveryMinutesBox_OnPreviewTextInput" CommandManager.PreviewExecuted="DeferredDeliveryMinutesBox_OnPreviewExecuted" InputMethod.IsInputMethodEnabled="False" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.MailBody, Mode=OneWay}" FontSize="11" Padding="3,3,3,3" Margin="0,1.5,0,0">
                    <TextBox Height="{Binding MailBodyTextBoxHeight}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" Text="{Binding MailBody, Mode=OneWay}" />
                </GroupBox>
            </StackPanel>
        </Grid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,6,8,0">
            <Button Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Send, Mode=OneWay}" Width="48" Margin="0,0,10,0" IsEnabled="{Binding IsCanSendMail}" Click="SendButton_OnClick" />
            <Button Content="{Binding Source={x:Static services:ResourceService.Instance}, Path=Resources.Cancel, Mode=OneWay}" Width="100" Margin="3,0,0,0" IsDefault="True" IsCancel="True" Click="CancelButton_OnClick" />
        </StackPanel>
    </StackPanel>
</Window>   